#### CONTEXTO #####

#'cat' son los datos correspondientes a la proyección de la primer semana de julio del 2060.
#'cat2013' son los datos correspondientes a la modelación de la primer semana de julio del 2013.
#'obs' son los datos correspondientes a los datos observados extraídos de las EMAS del mes de julio de 2013.
#'wrf' son los datos correspondientes a la modelación del mes de julio del 2013.


##### LIMPIADITA #####
#Los datos semanales ('cat' y 'cat2013') los obtuvimos después que los mensuales ('obs' y 'wrf')
#por lo la limpieza de los semanales la realizamos en este script con base en lo que se había
#realizado en otro script para los mensuales. 

VLBR_cat_prec <- subset(cat, select = c(VLBR_P2, CDT))
VLBR_cat_prec$Fecha <- CDT_semana$CDT

VLBR_cat2013_prec <- subset(cat_2013, select = c(VLBR_P2, CDT))
VLBR_cat2013_prec$Fecha <- CDT_semana$CDT

#Separamos la fecha en Mes, Dia y Hora (correr primero la función del inicio del script):
separafecha <- as.character(VLBR_cat_prec$Fecha)
separafecha <- as.character(VLBR_cat2013_prec$Fecha)

VLBR_cat_prec$Mes <- Mes
VLBR_cat_prec$Dia <- Dia
VLBR_cat_prec$Hora <- Hora

VLBR_cat2013_prec$Mes <- Mes
VLBR_cat2013_prec$Dia <- Dia
VLBR_cat2013_prec$Hora <- Hora

#Para la variable de precipitación extraemos los datos de cada día:
VLBR_cat_prec_daily <- subset(VLBR_cat_prec, VLBR_cat_prec$Hora == '23:00:00' )
VLBR_cat2013_prec_daily <- subset(VLBR_cat_prec, VLBR_cat_prec$Hora == '23:00:00' )

VLBR_cat_prec_hourly <- subset(VLBR_cat_prec, VLBR_cat_prec$Hora == '00:00:00' | 
                                 VLBR_cat_prec$Hora == '01:00:00' | VLBR_cat_prec$Hora == '02:00:00' | 
                                 VLBR_cat_prec$Hora == '03:00:00' | VLBR_cat_prec$Hora == '04:00:00' | 
                                 VLBR_cat_prec$Hora == '05:00:00' | VLBR_cat_prec$Hora == '06:00:00' |
                                 VLBR_cat_prec$Hora == '07:00:00' | VLBR_cat_prec$Hora == '08:00:00' | 
                                 VLBR_cat_prec$Hora == '09:00:00' | VLBR_cat_prec$Hora == '10:00:00' |
                                 VLBR_cat_prec$Hora == '11:00:00' | VLBR_cat_prec$Hora == '12:00:00' |
                                 VLBR_cat_prec$Hora == '13:00:00' | VLBR_cat_prec$Hora == '14:00:00' |
                                 VLBR_cat_prec$Hora == '15:00:00' | VLBR_cat_prec$Hora == '16:00:00' |
                                 VLBR_cat_prec$Hora == '17:00:00' | VLBR_cat_prec$Hora == '18:00:00' |
                                 VLBR_cat_prec$Hora == '19:00:00' | VLBR_cat_prec$Hora == '20:00:00' |
                                 VLBR_cat_prec$Hora == '21:00:00' | VLBR_cat_prec$Hora == '22:00:00' |
                                 VLBR_cat_prec$Hora == '23:00:00')

VLBR_cat2013_prec_hourly <- subset(VLBR_cat2013_prec, VLBR_cat2013_prec$Hora == '00:00:00' | 
                                     VLBR_cat2013_prec$Hora == '01:00:00' | VLBR_cat2013_prec$Hora == '02:00:00' | 
                                     VLBR_cat2013_prec$Hora == '03:00:00' | VLBR_cat2013_prec$Hora == '04:00:00' | 
                                     VLBR_cat2013_prec$Hora == '05:00:00' | VLBR_cat2013_prec$Hora == '06:00:00' |
                                     VLBR_cat2013_prec$Hora == '07:00:00' | VLBR_cat2013_prec$Hora == '08:00:00' | 
                                     VLBR_cat2013_prec$Hora == '09:00:00' | VLBR_cat2013_prec$Hora == '10:00:00' |
                                     VLBR_cat2013_prec$Hora == '11:00:00' | VLBR_cat2013_prec$Hora == '12:00:00' |
                                     VLBR_cat2013_prec$Hora == '13:00:00' | VLBR_cat2013_prec$Hora == '14:00:00' |
                                     VLBR_cat2013_prec$Hora == '15:00:00' | VLBR_cat2013_prec$Hora == '16:00:00' |
                                     VLBR_cat2013_prec$Hora == '17:00:00' | VLBR_cat2013_prec$Hora == '18:00:00' |
                                     VLBR_cat2013_prec$Hora == '19:00:00' | VLBR_cat2013_prec$Hora == '20:00:00' |
                                     VLBR_cat2013_prec$Hora == '21:00:00' | VLBR_cat2013_prec$Hora == '22:00:00' |
                                     VLBR_cat2013_prec$Hora == '23:00:00')


VLBR_cat_prec_daily$VLBR_P3 <- ave(VLBR_cat_prec_daily$VLBR_P2, FUN=function(x) c(0, diff(x)))
VLBR_cat2013_prec_daily$VLBR_P3 <- ave(VLBR_cat2013_prec_daily$VLBR_P2, FUN=function(x) c(0, diff(x)))

VLBR_cat_prec_hourly$VLBR_P3 <- ave(VLBR_cat_prec_hourly$VLBR_P2, FUN=function(x) c(0, diff(x)))
VLBR_cat2013_prec_hourly$VLBR_P3 <- ave(VLBR_cat2013_prec_hourly$VLBR_P2, FUN=function(x) c(0, diff(x)))

##### TIMESERIES #####
#Esta sección se puede modificar con base en lo que se quiera graficar (promedios semanales, mensuales o ambos). 

VLBR_prec_obs_hour <- subset(VLBR_precipitacion_hourly[1:168,], select = c(PrecObs, Hora2))
#VLBR_prec_wrf_hour <- subset(VLBR_precipitacion_hourly, select = c(PrecWRF, Hora2))
#nuevo
VLBR_prec_cat_hour <- subset(VLBR_cat_prec_hourly, select = c(VLBR_P3, CDT))
VLBR_prec_cat2013_hour <- subset(VLBR_cat2013_prec_hourly, select = c(VLBR_P3, CDT))

VLBR_prec_obs_hour$Hora2 <- as.numeric(VLBR_prec_obs_hour$Hora2)
#VLBR_prec_wrf_hour$Hora2 <- as.numeric(VLBR_prec_wrf_hour$Hora2)
#nuevo
VLBR_prec_cat_hour$CDT <- as.numeric(VLBR_prec_cat_hour$CDT)
VLBR_prec_cat2013_hour$CDT <- as.numeric(VLBR_prec_cat2013_hour$CDT)

VLBR_prec_obs_mean_hour <- ts(ddply(VLBR_prec_obs_hour, .(VLBR_prec_obs_hour[,2]), colMeans))
#VLBR_prec_wrf_mean_hour <- ts(ddply(VLBR_prec_wrf_hour, .(VLBR_prec_wrf_hour[,2]), colMeans))
#nuevo
VLBR_prec_cat_mean_hour <- ts(ddply(VLBR_prec_cat_hour, .(VLBR_prec_cat_hour[,2]), colMeans))
VLBR_prec_cat2013_mean_hour <- ts(ddply(VLBR_prec_cat2013_hour, .(VLBR_prec_cat2013_hour[,2]), colMeans))

VLBR_prec_ts <- as.data.frame(rbind(VLBR_prec_obs_mean_hour, #VLBR_prec_wrf_mean_hour, 
                                    VLBR_prec_cat_mean_hour, VLBR_prec_cat2013_mean_hour ))
VLBR_prec_ts$Datos <- Datos

VLBR_prec_ts$`VLBR_prec_obs_hour[, 2]` <- NULL
colnames(VLBR_prec_ts) <- c("Prec", "Hora", "Datos")

VLBR_prec_mean_hour_plot <- ggplot(VLBR_prec_ts, aes(x = Hora, y = Prec)) + 
  geom_line(aes(color = Datos), size = 1) +
  labs(title='VLBR', x="Hora", y="Precipitación [mm]")+
  scale_color_manual(values = c("blue", "red","green")) +
  theme_minimal()+
  theme(legend.position='right') + 
  coord_cartesian(xlim=c(0, 23)) + 
  scale_x_continuous(breaks=seq(0, 23, 1))

VLBR_prec_mean_hour_plot


###### GRAFICAS FINALES #####
#Juntamos todas las graficas resultantes en una misma página. 

#Se cambia el nombre de la estación en función de la que queramos poner: 
ggarrange(MLII_prec_mean_hour_plot,
          NVTO_prec_mean_hour_plot,
          PIZP_prec_mean_hour_plot,
          PRMD_prec_mean_hour_plot,
          SRHT_prec_mean_hour_plot,
          TRMS_prec_mean_hour_plot,
          ncol=2, nrow=3, common.legend = TRUE, legend="bottom")

#Estas son las estaciones importantes por ser las más cercanas a la mancha urbana:
ggarrange(ECOG_prec_mean_hour_plot,
          PRMD_prec_mean_hour_plot,
          TZNT_prec_mean_hour_plot,
          CRCA_prec_mean_hour_plot,
          TRMS_prec_mean_hour_plot,
          ALTZ_prec_mean_hour_plot,
          ncol=2, nrow=3, common.legend = TRUE, legend="bottom")


##### EXTRA #####

#Otras fromas de juntar gráficas en una sola página: 

#g_legend<-function(a.gplot){
  #tmp <- ggplot_gtable(ggplot_build(a.gplot))
  #leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
  #legend <- tmp$grobs[[leg]]
  #return(legend)}

#mylegend<-g_legend(ALTZ_prec_mean_hour_plot)

#p3 <- grid.arrange(arrangeGrob(ALTZ_prec_mean_hour_plot + theme(legend.position="none"),
                               #ALTZ_prec_mean_hour_plot + theme(legend.position="none"),
                               #ALTZ_prec_mean_hour_plot + theme(legend.position="none"),
                               #ALTZ_prec_mean_hour_plot + theme(legend.position="none"),
                               #ALTZ_prec_mean_hour_plot + theme(legend.position="none"),
                               #ALTZ_prec_mean_hour_plot + theme(legend.position="none"),
                               #nrow=3),
                   #mylegend, nrow=2,heights=c(10, 10))

#grid.arrange(
  #ALTZ_prec_mean_hour_plot,
  #ATLC_prec_mean_hour_plot,
  #CRCA_prec_mean_hour_plot,
  #ECOG_prec_mean_hour_plot,
  #HCHP_prec_mean_hour_plot,
  #HMNT_prec_mean_hour_plot,
  #IGUA_prec_mean_hour_plot,
  #IMTA_prec_mean_hour_plot,
  #nrow = 4,
  #top = "Series de tiempo precipitación horaria media semana julio",
  #bottom = NULL
#)
